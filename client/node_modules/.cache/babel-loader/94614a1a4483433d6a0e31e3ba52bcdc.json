{"ast":null,"code":"var _jsxFileName = \"/home/vithujan/Documents/MERN/FullAuth/client/src/auth/register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify'; // validation method 1\n// const validate = values =>{\n//     var errors={}\n//     if(!values.name){\n//         errors.name = \"Name is required\"\n//     }else if(values.name.length > 15){\n//         errors.name = \"Maximum 15 characters only\"\n//     }else if(values.name.length < 3){\n//         errors.name = \"Minimum 3 characters required\"\n//     }\n//     return errors;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: yup.object({\n      name: yup.string().required(\"Name is required\").strict().trim().min(5, \"Minimum 5 characters required\").max(15, \"Maximum 15 characters only\"),\n      email: yup.string().email().required(\"Email is required\"),\n      password: yup.string().required(\"Password is required\"),\n      confirmPassword: yup.string().oneOf([yup.ref('password'), null], \"Password and confirm password must be same\").required(\"Confirm Password List is required\")\n    }),\n    // validate,\n    onSubmit: userInputData => {\n      console.log(userInputData);\n      toast.success(\"Success Login!\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"name\",\n            onChange: formik.handleChange,\n            value: formik.values.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"email\",\n            onChange: formik.handleChange,\n            value: formik.values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"password\",\n            onChange: formik.handleChange,\n            value: formik.values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"confirmPassword\",\n            onChange: formik.handleChange,\n            value: formik.values.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/vithujan/Documents/MERN/FullAuth/client/src/auth/register.js"],"names":["React","useFormik","yup","axios","toast","Form","formik","initialValues","name","email","password","confirmPassword","validationSchema","object","string","required","strict","trim","min","max","oneOf","ref","onSubmit","userInputData","console","log","success","handleSubmit","handleChange","values","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\n// validation method 1\n// const validate = values =>{\n//     var errors={}\n//     if(!values.name){\n//         errors.name = \"Name is required\"\n//     }else if(values.name.length > 15){\n//         errors.name = \"Maximum 15 characters only\"\n//     }else if(values.name.length < 3){\n//         errors.name = \"Minimum 3 characters required\"\n//     }\n\n//     return errors;\n// }\n\nconst Form = () => {\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        },\n        validationSchema:yup.object({\n            name:yup.string()\n            .required(\"Name is required\")\n            .strict()\n            .trim()\n            .min(5, \"Minimum 5 characters required\")\n            .max(15, \"Maximum 15 characters only\"),\n            email:yup.string()\n            .email()\n            .required(\"Email is required\"),\n            password:yup.string()\n            .required(\"Password is required\"),\n            confirmPassword:yup.string()\n            .oneOf([yup.ref('password'),null],\"Password and confirm password must be same\")\n            .required(\"Confirm Password List is required\")\n        }),\n        // validate,\n        onSubmit:(userInputData) => {\n            console.log(userInputData);\n            toast.success(\"Success Login!\");\n        }\n    })\n\n    return(\n        <div className=\"container\">\n            <div className=\"jumbotron\">\n                <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"name\"\n                            onChange={formik.handleChange}\n                            value={formik.values.name}\n                        />\n                            {formik.errors.name ? \n                                <div className=\"text-danger\">{formik.errors.name}</div>\n                                : null\n                            }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"email\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                        />\n                            {formik.errors.email ? \n                                <div className=\"text-danger\">{formik.errors.email}</div>\n                                : null\n                            }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"password\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                        />\n                            {formik.errors.password ? \n                                <div className=\"text-danger\">{formik.errors.password}</div>\n                                : null\n                            }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Confirm Password:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"confirmPassword\"\n                            onChange={formik.handleChange}\n                            value={formik.values.confirmPassword}\n                        />\n                            {formik.errors.confirmPassword ? \n                                <div className=\"text-danger\">{formik.errors.confirmPassword}</div>\n                                : null\n                            }\n                    </div> \n                    <button className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}
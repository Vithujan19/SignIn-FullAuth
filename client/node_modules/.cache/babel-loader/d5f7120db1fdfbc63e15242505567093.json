{"ast":null,"code":"var _jsxFileName = \"/home/vithujan/Documents/MERN/FullAuth/client/src/auth/login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify'; // validation method 1\n// const validate = values =>{\n//     var errors={}\n//     if(!values.name){\n//         errors.name = \"Name is required\"\n//     }else if(values.name.length > 15){\n//         errors.name = \"Maximum 15 characters only\"\n//     }else if(values.name.length < 3){\n//         errors.name = \"Minimum 3 characters required\"\n//     }\n//     return errors;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: yup.object({\n      email: yup.string().email().required(\"Email is required\"),\n      password: yup.string().required(\"Password is required\")\n    }),\n    // validate,\n    onSubmit: userInputData => {\n      console.log(userInputData);\n      axios.post('http://localhost:5000/api/login', userInputData).then(res => {\n        props.history.push('/home');\n      }).catch(err => {\n        toast.error(err.response.userInputData);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"email\",\n            onChange: formik.handleChange,\n            value: formik.values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"password\",\n            onChange: formik.handleChange,\n            value: formik.values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => {\n            window.location.href = 'register';\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vithujan/Documents/MERN/FullAuth/client/src/auth/login.js"],"names":["React","useFormik","yup","axios","toast","Login","props","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","userInputData","console","log","post","then","res","history","push","catch","err","error","response","handleSubmit","handleChange","values","errors","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\n// validation method 1\n// const validate = values =>{\n//     var errors={}\n//     if(!values.name){\n//         errors.name = \"Name is required\"\n//     }else if(values.name.length > 15){\n//         errors.name = \"Maximum 15 characters only\"\n//     }else if(values.name.length < 3){\n//         errors.name = \"Minimum 3 characters required\"\n//     }\n\n//     return errors;\n// }\n\nconst Login = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema:yup.object({\n            email:yup.string()\n            .email()\n            .required(\"Email is required\"),\n            password:yup.string()\n            .required(\"Password is required\")\n        }),\n        // validate,\n        onSubmit:(userInputData) => {\n            console.log(userInputData);\n            axios.post('http://localhost:5000/api/login', userInputData)\n            .then(res => {\n                props.history.push('/home');\n            })\n            .catch(err => {\n                    toast.error(err.response.userInputData)\n            })\n        }\n    })\n\n    return(\n        <div className=\"container\">\n            <div className=\"jumbotron\">\n                <h4>Login</h4>\n                <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"email\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                        />\n                            {formik.errors.email ? \n                                <div className=\"text-danger\">{formik.errors.email}</div>\n                                : null\n                            }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password:</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"password\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                        />\n                            {formik.errors.password ? \n                                <div className=\"text-danger\">{formik.errors.password}</div>\n                                : null\n                            }\n                    </div>\n                    <button className=\"btn btn-primary\">Submit</button>\n                    <a \n                        href=\"#\"\n                        onClick={() => {\n                            window.location.href = 'register';\n                        }}\n                    >\n                        Register\n                    </a>     \n                </form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}